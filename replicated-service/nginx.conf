events {
  # DEFAULT: worker_processes 1;
  
  # This will serve 1024 clients/second
  # on a single CPU core. Note that node.js
  # is on a single core.

  # For more information on how to tune performance look here:
  # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  worker_connections  1024;
}

# STEPS.
#
# Listen on port 443 for SSL server.
#
# Set primary server.
#
# Set the SSL server on and set path to the
# SSL certificate and the SSL certificate key.
#
# Redirect traffic to the varnish cache on port 80.
# Reset the host header from the previous location.
# Log original IP address of client into header.
# Set forwarding protocol to HTTP (terminate).
# Makes connection come from the original IP.
http {
  server {
    listen 443 ssl;
    server_name my-domain.com www.my-domain.com;
    ssl on;
    ssl_certificate         /etc/certs/tls.crt;
    ssl_certificate_key     /etc/certs/tls.key;
    location / {
        proxy_pass http://varnish-service:80;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
    }
  }
}